#!/bin/sh

mkdir -p /tmp
swupdate_enabled() {
    [ -f /run/media/*/*.swu ] && mv /run/media/*/*.swu /tmp/ && return 0
    if [ -f /tmp/swupdate_enabled ]; then
        return 0
    elif [ -n "$bootparam_swupdate" ]; then
        return 0
    else
        # swupdate not enabled. Set variable so its enabled in the final slot.
        echo "yes" > /tmp/swupdate_enabled
        return 1
    fi
}

function get_slot {
    for i in `cat /proc/cmdline`; do
        if [[ $i == bootslot=* ]]; then
            CURRENT_SLOT="${i: -1}"
        fi;
    done
    # if recovery flag is set, use the other slot
    if [ "$CURRENT_SLOT" = "1" ]; then
        export UPDATE_SLOT="0";
        [ -f /boot/recovery ] && export UPDATE_SLOT="1";
    else
        export UPDATE_SLOT="1";
        [ -f /boot/recovery ] && export UPDATE_SLOT="0";
    fi
}

run_swupd() {
    . /etc/default/swupdate
    get_slot

    umount -f /dev/disk/by-label/storage; umount -f /dev/disk/by-partlabel/storage; umount -f /dev/disk/by-label/boot; umount -f /dev/disk/by-partlabel/boot;

    selection="recovery,slot${UPDATE_SLOT}"
    [ -f /tmp/*.swu ] && swupdate -v -H ${hardware}:1.0 -f /etc/swupdate.cfg -i /tmp/*.swu -p 'sync; echo b >/proc/sysrq-trigger'
    dl_url="https://github.com/VideologyInc/scailx_yocto/releases/latest/download/scailx-image-swupdate-${hardware}.swu"
    swupdate -v -H ${hardware}:1.0 -f /etc/swupdate.cfg -e "$selection" -d "--url $dl_url" -p 'sync; echo b >/proc/sysrq-trigger'
    swupdate -v -H ${hardware}:1.0 -f /etc/swupdate.cfg -e "$selection" -w ""              -p 'sync; echo b >/proc/sysrq-trigger'
}

swupdate_run() {
    # if we're in an error condition, format the disk
    [ -f "/tmp/initrd_error" ] && echo "boot error. Updating"

    # get dhcp lease
    udhcpc
    run_swupd
}
