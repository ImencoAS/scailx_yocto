#!/bin/sh

STORAGE_DEV="/dev/mmcblk0p3"
storage_enabled() {
    return 0
}

function get_slot
{
    for i in `cat /proc/cmdline`; do
        if [[ $i == bootslot=* ]]; then
            CURRENT_SLOT="${i: -1}"
        fi;
    done
    [ "$CURRENT_SLOT" = "1" ] || CURRENT_SLOT="0";
}

storage_overlay_hook() {
	status=$1
	module=$2

    [ "$module" = "rootfs" ] || return 0
    debug "storage_overlay_hook running $1 $module"

    get_slot
    #install modules.squashfs in rootfs
    mounts=""
    for f in /storage/bsp/$CURRENT_SLOT/mounts/*.squashfs; do
        [ -f "$f" ] || continue
        f=$(basename -s .squashfs $f)
        mkdir -p /volumes/$f
        mount -t squashfs -o loop /storage/bsp/$CURRENT_SLOT/mounts/$f.squashfs /volumes/$f && mounts="/volumes/$f:$mounts"
    done

    mkdir -p /storage/overlay/upper
    mkdir -p /storage/overlay/work
    mount -t overlay -o index=off,metacopy=off,lowerdir=${mounts}${ROOTFS_DIR},upperdir=/storage/overlay/upper,workdir=/storage/overlay/work overlay "$ROOTFS_DIR"
    if [ $? -ne 0 ]; then
        echo "Failed to mount overlay for /. Clearing overlay."
        rm -rf /storage/overlay/upper/*
        rm -rf /storage/overlay/work/*
        mount -t overlay -o index=off,metacopy=off,lowerdir=$ROOTFS_DIR,upperdir=/storage/overlay/upper,workdir=/storage/overlay/work overlay "$ROOTFS_DIR"
    fi

    for f in /storage/config/persist/* ; do
        cp -fr -t "/$ROOTFS_DIR" "$f"
    done

    # move the storage mount to the rootfs
    [ -d /$ROOTFS_DIR/storage ] && mount -n --move /storage "$ROOTFS_DIR/storage"
}

storage_run() {
    # add function to add overlay after rootfs
    add_module_post_hook "storage_overlay_hook"

    # mount boot partition
    get_slot
    mkdir -p /boot
    mount /dev/disk/by-label/boot${CURRENT_SLOT} /boot

    mkdir -p /storage
    mount "${STORAGE_DEV}" /storage
}
